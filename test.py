import numpy as np
from tqdm import tqdm


def initialisation(dimensions):
    
    parametres = {}
    C = len(dimensions)



    for c in range(1, C):
        parametres['W' + str(c)] = np.random.randn(dimensions[c], dimensions[c - 1])*10
        parametres['b' + str(c)] = np.random.randn(dimensions[c], 1)*10
    return parametres

def forward_propagation(X, parametres):
  
  activations = {'A0': X}

  C = len(parametres) // 2

  for c in range(1, C + 1):

    Z = parametres['W' + str(c)].dot(activations['A' + str(c - 1)]) + parametres['b' + str(c)]
    activations['A' + str(c)] = 1 / (1 + np.exp(-Z))

  return activations

def update(parametres, learning_rate):

    new_parametre = parametres.copy()

    C = len(new_parametre) // 2
    
    for c in range(1, C + 1):
        new_parametre['W' + str(c)] = new_parametre['W' + str(c)] + np.random.normal(0, learning_rate, size= None)
        new_parametre['b' + str(c)] = new_parametre['b' + str(c)] + np.random.normal(0, learning_rate, size= None)

    return new_parametre

def score(grille):

    if grille[0,0] == 99:
        return False

    for i in range(3):
        if grille[i,0] == grille[i,1] == grille[i,2] != 0:
            return True
        
    for j in range(3):
        if grille[0,j] == grille[1,j] == grille[2,j] != 0:
            return True

    if grille[0,0] == grille[1,1] == grille[2,2] != 0:
        return True
    
    if grille[0,2] == grille[1,1] == grille[2,0] != 0:
        return True
    
    return False

def predict(X, parametres):
  activations = forward_propagation(X, parametres)
  C = len(parametres) // 2
  Af = activations['A' + str(C)]
  return Af
    
def calcul(nombre_joueur = 100, nombre_itération = 100, learning_rate = 100):
    

    """X = np.zeros((nombre_joueur,9), dtype=int)

    Remplissage = np.np.array([99,99,99,99,99,99,99,99,1])

    X_total = np.np.array([np.insert(X, 0, Remplissage, axis=0)])
    for i in range(X.shape[0]):
        X_total = np.vstack([X_total ,[np.insert(X, i+1, Remplissage, axis=0)]])
    """

    """dimensions = list((9, 9, 9, 9))
    parametres = initialisation(dimensions)
    parametres_list = np.np.array([parametres])
    for i in range(X.shape[0]):
        parametres_list = np.append(parametres_list ,initialisation(dimensions))"""


    """classement = np.zeros(nombre_joueur+1)"""


    for p in tqdm(range(nombre_itération)):

        """classement = np.zeros(nombre_joueur+1)

        for j in range(4):

            for i in range(X_total.shape[0]):

                Y = predict(X_total[i].T, parametres_list[i]).T
                
                X_total[i,np.arange(X_total.shape[1]),np.argmax(Y - np.abs(X_total[i]), axis=1)] = 1

                Victoire = np.np.array([])
                

                for k in range(X_total.shape[1]):          
                    if score(X_total[i,k].reshape(3,3)) == 1:
                        X_total[i,k] = Remplissage

                        classement[i] += 1
                        classement[k] += -2

                
            

            X_total = X_total.swapaxes(0, 1)
            X_total = -X_total

            for i in range(X_total.shape[0]):

                Y = predict(X_total[i].T, parametres_list[i]).T
                
                X_total[i,np.arange(X_total.shape[1]),np.argmax(Y - np.abs(X_total[i]), axis=1)] = 1

                Victoire = np.np.array([])
                
                for k in range(X_total.shape[1]):          
                    if score(X_total[i,k].reshape(3,3)) == 1:
                        X_total[i,k] = Remplissage

                        classement[i] += 1
                        classement[k] += -2

            X_total = X_total.swapaxes(0, 1)
            X_total = -X_total

            

        for i in range(X_total.shape[0]):

            Y = predict(X_total[i].T, parametres_list[i]).T
            
            X_total[i,np.arange(X_total.shape[1]),np.argmax(Y - np.abs(X_total[i]), axis=1)] = 1

            Victoire = np.np.array([])
            
            for k in range(X_total.shape[1]):          
                if score(X_total[i,k].reshape(3,3)) == 1:
                    X_total[i,k] = Remplissage

                    classement[i] += 1
                    classement[k] += -2"""



        """parametres_darwin = parametres_list[np.argmax(classement)]


        parametres_list = np.np.array([parametres_darwin])
        for i in range(X.shape[0]):
            parametres_list = np.append(parametres_list ,update(parametres_darwin, learning_rate/(p+1)))

        X = np.zeros((nombre_joueur,9), dtype=int)

        Remplissage = np.np.array([99,99,99,99,99,99,99,99,1])

        X_total = np.np.array([np.insert(X, 0, Remplissage, axis=0)])
        for i in range(X.shape[0]):
            X_temp = X_total.copy()
            X_total = np.vstack([X_temp ,[np.insert(X, i+1, Remplissage, axis=0)]])"""


    """print(parametres_darwin)"""





def init():
    
    grille = [[0 for i in range(3)]for j in range(3)]

    return grille

def placement(i,j,grille):

    if i>2 or i<0 or j>2 or j<0:
        return False

    if grille[i][j] == 0:
        return True
    else:
        return False

def scores(grille):

    for i in range(3):
        if grille[i][0] == grille[i][1] == grille[i][2] != 0:
            return True
        
    for j in range(3):
        if grille[0][j] == grille[1][j] == grille[2][j] != 0:
            return True

    if grille[0][0] == grille[1][1] == grille[2][2] != 0:
        return True
    
    if grille[0][2] == grille[1][1] == grille[2][0] != 0:
        return True
    
    return False
    
def endgame(compteur):

    print("joueur" + str(compteur) + "gagne")



def play(parametre):

    grille = init()

    compteur = 1

    while True:

        if compteur == 1:

            i = int(input("ligne J1"))
            j = int(input("colonne J1"))

            while placement(i,j,grille) == False:
                i = int(input("ligne J1"))
                j = int(input("colonne J1"))

            
            grille[i][j] = compteur
          

            if scores(grille):
                endgame(compteur)
                break
            compteur = -1

            for k in range(3):
                print(grille[k])


        if compteur == -1:

            grille_temp = np.array([])
            for l in range(3):
                grille_temp = np.append(grille_temp,grille[l])
            
            grille_temp = np.array([-grille_temp.copy()])

            print(grille_temp)

            arg = np.argmax(predict(grille_temp.T,parametre).T - np.abs(grille_temp))

            i = arg // 3
            j = (arg)%3

            grille[i][j] = compteur

            if scores(grille):
                endgame(compteur)
                
                break
            compteur = 1

            for k in range(3):
                print(grille[k])

param = {'W1': np.array([[ -40.54531003, -244.55134581,  144.7045569 ,  -89.21784102,
          34.92320995,  -48.23319222,  -65.80588132,  168.00186546,
         -91.55374496],
       [ 204.23928393, -299.45030641,   68.98612916, -250.9608223 ,
         157.57441115, -134.06590314,  -21.02021688,  128.74730509,
         215.0687421 ],
       [  73.84237148,  -42.86416028,  200.23284609,  587.00097166,
        -214.38384716, -234.32611302,  -25.54306626,  109.4376687 ,
           8.66712035],
       [  75.53815911, -198.06738037,   80.40871095,  -63.15596407,
         124.51455209,  175.48508821,  -59.86204771,   21.61458803,
          55.84922429],
       [ 176.31198982,  160.60294651,  -56.28013   , -151.70569038,
         172.36014068, -187.44982011,   37.11181707,  145.97971309,
         -51.44674344],
       [-260.37607701,  241.73045873,  116.51837656,   78.28738298,
         355.96083703,  276.53102376,  -32.83695897,   28.47135959,
          57.21020111],
       [-126.20442178,  215.96659775,   74.04398035,  -87.79092608,
         -32.93755546,   32.83598937, -136.42195944,  -30.648451  ,
         -79.84441122],
       [ 100.38077536,  -84.22189574, -246.02257566,   57.37300202,
         168.26610867,   29.94064947, -244.10621542, -130.0701811 ,
        -244.34523207],
       [-171.17052737,  196.86403002,  -56.58014822,  198.79129708,
        -404.88998725,  226.32683738,  -39.53706229,  -35.32013165,
        -483.11937584],
       [-105.04960487, -215.22390109,  265.53742745,  112.87436284,
          22.62266917,  145.79711612,  170.59542221, -280.00472477,
          -2.49549441],
       [-120.33730704, -392.52031263, -232.46180911,  -58.27730956,
          92.05215493, -293.79837983,  120.29416797,  -95.72139252,
           5.85508665],
       [ 145.79690537,  -73.91220036,   35.06581792,  -66.84274962,
         196.96728612,  -19.84831867,  137.18246714, -103.4403711 ,
         144.67197654],
       [  79.49803289,  219.78762614,   84.40473934,   88.66147479,
         -97.9819931 ,  -53.0645648 ,   62.67255661, -119.19942893,
         106.5626478 ],
       [ -71.37367322, -207.92204218, -128.9348445 ,  125.64645447,
        -103.87864996, -197.95160875,   99.46034274,  -75.37504664,
         157.42933611],
       [  -7.51387316,  212.89552223, -141.33162564, -168.54981528,
         132.3874169 , -362.95656854,   10.94147727,   87.50688552,
          79.91773771],
       [ 157.6266244 ,   12.62300779,  -15.06263414,  -83.67725037,
          55.00780683,   96.37012751,  -67.152599  ,  -57.28476432,
           9.75311333]]), 'b1': np.array([[-164.2859767 ],
       [ -82.68161929],
       [ 147.33840894],
       [ 128.37655897],
       [-179.77712624],
       [-500.26513099],
       [  82.95273876],
       [ -37.92784192],
       [ 326.78168983],
       [ -64.81701331],
       [  48.1852803 ],
       [ 163.14643756],
       [  74.70654155],
       [  84.27690077],
       [ 363.40239539],
       [ 143.64705201]]), 'W2': np.array([[ 1.69895579e+02,  4.11502690e+01, -2.80932167e+02,
        -5.40366716e+01,  6.16547528e+01,  6.26246913e+01,
        -1.45189353e+02, -7.85923652e+00, -8.33772538e+01,
         2.08635543e+02,  3.48588737e+00, -1.26445319e+02,
        -4.65381412e+01,  1.20543951e+02,  6.69156339e+01,
         9.27412945e+01],
       [ 2.08085787e+02,  2.03094314e+02,  1.34984989e+02,
         1.99884538e+02, -9.36429395e+01, -8.61867427e+01,
         1.46962159e+02,  1.02470246e+02, -2.48300654e+01,
        -2.08568154e+02,  5.81722179e+01, -6.03737072e+01,
         4.56759949e+01,  3.09073788e+01, -9.74484087e+01,
         1.29668759e+02],
       [ 1.85767926e+02,  3.20031672e+01, -5.32747754e-02,
        -1.96345501e+02, -2.16355875e+02,  1.51012557e+01,
         2.76423212e+02,  1.11868029e+02,  1.54382065e+02,
         4.92765916e+00,  1.09332029e+02, -2.93740809e+02,
        -1.11519369e+02,  2.63781658e+02, -5.29750513e+01,
        -3.34699732e+02],
       [ 8.73954509e+01,  8.94248199e+01, -7.49087823e+01,
         8.18597088e+01,  1.80702846e+02, -1.69018696e+02,
         1.27991141e+02, -1.06628191e+02,  2.47082252e+01,
        -2.27064231e+02, -1.57593041e+02, -8.06017446e+01,
         1.20547487e+02,  2.84861770e+02,  9.55914081e-01,
        -1.71529312e+01],
       [ 1.19190989e+02,  3.24090474e+01,  2.89155418e+02,
         2.35852769e+01, -3.86057192e+01, -8.99687152e+00,
         1.85127193e+02, -2.27737881e+02,  2.22251926e+02,
        -4.14216363e+01, -9.98358083e+01,  1.40761033e+02,
        -2.27400613e+02,  3.10412473e+01,  9.15147965e+01,
        -5.33807599e+01],
       [-4.25043734e+01,  7.19948513e+01,  2.20703869e+02,
         7.66103726e+01, -1.24669874e+02,  9.18885624e+01,
        -8.80848030e+01,  1.34625952e+02, -3.48476798e+02,
        -6.20407097e+01,  1.04540956e+02, -2.16225322e+02,
        -8.55347790e+01, -1.32485831e+02, -2.45854067e+02,
        -2.05246004e+02],
       [ 2.03162807e+02, -1.91949793e+01,  3.95419894e+01,
         4.87904370e+01, -8.22181838e+01, -2.26481127e+02,
        -4.51195086e+00,  2.85039246e+01, -2.31852643e+02,
        -1.59823185e+02,  4.51608280e+02, -1.54770286e+02,
        -1.07941970e+02, -1.58194265e+01, -1.43980673e+02,
         2.60147196e+02],
       [-8.60955270e+01, -8.55381133e+01,  1.78358457e+02,
         1.66402557e+02, -1.88703358e+02,  2.37472921e+02,
        -6.32094000e+01,  3.21865547e+02,  1.60457621e+02,
        -4.26319205e+01, -4.32788330e+01, -2.33852125e+02,
         8.19670048e+01, -1.15119657e+02,  3.25068500e+01,
         1.55953585e+02],
       [ 1.94282591e+02,  1.85501801e+01,  1.18449106e+02,
        -3.51129046e+02, -8.69063222e+01, -9.10859995e+01,
        -2.02557848e+02, -1.08645702e+02,  2.32278133e+02,
        -3.37129638e+02, -9.43019125e+01,  3.16508639e+02,
         1.94225397e+02,  1.02803791e+02, -2.40038581e+02,
        -1.55369504e+02],
       [ 2.40063687e+02,  3.49272616e+01,  1.58572769e+02,
        -1.11661703e+02, -1.83155790e+01,  5.91373000e+01,
         7.29398868e+01,  2.07392067e+02,  9.53790625e+01,
        -3.89288111e+02, -1.04496834e+02,  6.62167491e+01,
         6.54328930e+01, -2.44258727e+00, -9.90998936e+01,
         3.25201501e+01],
       [-3.62875651e+01,  2.75267268e+02,  1.19765874e+02,
        -4.62398981e+01,  1.86117302e+02, -8.10376051e+01,
        -2.65704944e+02,  2.01034935e+02, -2.08431914e+02,
        -4.38378133e+01,  1.93738670e+02,  1.63962032e+02,
        -1.45419602e+01, -2.83245069e+01, -2.78811458e+01,
        -1.96643951e+01],
       [-1.08062665e+02,  3.67541036e+01, -2.73262879e+02,
        -4.64929731e+01,  5.81653510e+01,  1.10053537e+02,
         1.65100356e+02, -4.44028073e+02,  3.75906679e+00,
        -1.51810238e+02,  6.40695015e+01,  9.50334414e+01,
         1.32116137e+02, -4.14709658e+01, -3.05246888e+02,
        -2.01766306e+01],
       [-6.80392275e+01, -9.17042992e+01, -1.20423804e+02,
         7.93596672e+01,  9.02724651e+01,  3.86977644e+01,
         8.84526627e+00,  2.25295998e+01,  8.46668602e+01,
        -2.37481653e+02,  7.58268586e+01, -1.56012574e+02,
        -2.96998671e+02,  3.10680489e+01, -1.41094111e+02,
         2.36005369e+02],
       [ 7.99439502e+01, -1.31122073e+02, -1.85495831e+02,
        -8.03161345e+01, -1.09088093e+02,  2.83856254e+02,
         8.59022869e+01, -1.43666892e+02, -2.45344646e+02,
        -3.83940713e+02, -1.85135262e+02,  2.03003829e+02,
        -2.88645407e+02, -1.94942061e+02,  2.04523711e+01,
        -1.47778446e+02],
       [ 3.98195962e+01, -3.62041725e+02, -8.21694941e+01,
         1.26589462e+02,  2.38377785e+02,  5.00298109e+00,
         2.38373934e+02,  8.13144184e+01, -2.90965453e+02,
         2.94695327e+02, -9.90130078e+01,  1.23246540e+02,
        -1.26671961e+01,  5.54217692e+01, -1.43674950e+02,
         8.66413848e+01],
       [-2.47461590e+02,  2.99759388e+01,  2.01543551e+01,
         6.45916606e+01, -2.11212834e+01, -1.60537839e+02,
         1.55225321e+02,  4.95909978e+01, -1.11845640e+02,
         5.72276743e+01, -8.12828963e+01, -1.67077181e+02,
         1.72801431e+01,  1.12157130e+02, -2.60053649e+02,
         5.16028955e+02]]), 'b2': np.array([[-173.71323979],
       [ 152.62918136],
       [ 171.06264597],
       [ -40.11413016],
       [  82.07361177],
       [ 202.2777318 ],
       [ 418.21360844],
       [  -1.37793749],
       [   2.71624726],
       [  88.93126587],
       [ 197.66204458],
       [  66.66063277],
       [ 151.95274016],
       [ 277.0549323 ],
       [ 143.44050692],
       [ -49.7070045 ]]), 'W3': np.array([[ 1.19857875e+01, -5.54948904e+01, -3.33633073e+01,
        -4.94785877e+01,  3.39946519e+02,  5.58341744e+01,
        -4.58664026e+01, -9.67809737e+01, -3.39080832e+02,
         2.93704893e+02, -4.57122496e+00, -8.43800975e+01,
        -6.39656328e+01,  1.20328355e+02,  1.11522075e+02,
         7.93147351e+01],
       [-1.51929848e+02,  2.57734063e+01, -3.40303079e+02,
         2.45390428e+01,  3.04876682e+02, -1.88670231e+02,
         2.13469010e+02,  1.83241468e+02,  1.62965014e+02,
        -2.81525034e+02,  2.73248483e+02,  2.18484293e+02,
         2.00908261e+02,  7.81353541e+01, -1.83470358e+02,
         1.47217126e+02],
       [ 2.63428759e+02, -6.62383597e+00, -5.10312838e+01,
         1.94531964e+02,  5.99418620e+00,  2.85439308e+02,
         1.79795828e+02,  1.09891341e+02, -3.42049824e+01,
         8.20638127e+01, -1.17017407e+02, -4.81303822e+01,
        -8.00680939e+01,  1.49938042e+02,  1.00313127e+02,
         1.43153841e+02],
       [ 4.62284349e+01, -8.30008610e+01,  8.67307543e+01,
        -2.26448239e+01,  5.11739885e+01,  1.45771421e+02,
        -4.37282357e+01,  1.11828009e+02,  2.08974432e+02,
        -5.61895920e+01, -1.19462257e+02, -7.57240893e+01,
        -8.24464566e+01,  3.46087058e+01, -1.56622933e+02,
        -1.44390300e+01],
       [-5.32997507e+01, -2.86361049e+00, -9.97353502e+01,
        -1.31779203e+02, -2.89277665e+01, -1.03671305e+02,
         4.84007273e+02,  1.63492668e+02,  2.35711419e+02,
         2.08521357e+01, -5.87640249e+00,  2.77978289e+02,
         2.39121978e+02, -2.93093082e+01,  8.39338198e+00,
        -1.41125125e+02],
       [-1.22010001e+02,  1.47437730e+02, -7.35008099e+01,
         9.17468435e+01, -1.22230513e+02, -9.54424785e+01,
        -1.53548397e+02,  4.17719380e+01,  6.89430654e+01,
         2.66713091e+01,  7.84962666e+01, -1.13624874e+02,
        -1.60663911e+02,  1.38906191e+02,  1.30018546e+02,
        -1.76047572e+02],
       [-1.30896000e+01,  1.93571694e+02,  1.60478849e+01,
         9.10280131e+01,  1.84453769e+02,  3.67079941e+01,
         2.50970016e+02, -1.07871360e+02,  5.59002375e+01,
        -2.54375318e+02, -2.85020157e+02,  2.43538677e+02,
         1.42655875e+02, -2.62598422e+02,  3.22704076e+02,
        -2.85348356e+02],
       [-2.91730000e+02, -1.40189604e+02, -2.40269646e+02,
         2.67341131e+02, -4.21109085e+01,  3.39577596e+02,
        -4.14988744e+02, -9.81867083e+01, -2.42256116e-01,
        -1.29765752e+01,  1.44705443e+02,  4.76688979e+01,
         1.99602346e+02, -8.27817280e+01,  2.71545446e+02,
         8.95135922e+01],
       [-1.63129479e+02,  4.95816261e+01,  1.29837769e+02,
        -7.92573832e+01, -3.23951358e+02,  3.19456696e+01,
         2.29206560e+02,  8.13737810e+01,  3.70295723e+02,
         5.87602717e+01,  1.98951524e+02,  3.75289244e+01,
        -8.85780529e+01, -3.52953935e+02, -1.60293168e+01,
        -4.46638232e+02],
       [ 2.13885039e+02, -1.45576626e+02,  2.20821512e+02,
         3.74103491e+02,  4.98279414e+01, -2.16875349e+02,
         3.60803589e+02,  1.21705984e+02,  3.44585082e+02,
        -2.04824649e+02, -2.43096415e+02, -3.85426234e+01,
         9.16514063e+01, -1.14264450e+02,  1.03214729e+01,
         9.55221453e+00],
       [ 3.20234142e+02, -1.09866282e+01, -1.07364686e+02,
        -8.05179654e+01, -2.93632166e+01,  8.48275820e+00,
        -1.20900080e+02, -2.82736389e+02, -2.23244559e+00,
        -2.83179499e+01, -1.67242304e+02,  1.50636370e+02,
         2.39797034e+02, -1.09923781e+02,  2.72618227e+02,
         5.47577908e+01],
       [-3.95420513e+02,  6.85077976e+01,  3.50222653e+01,
        -6.32393959e+01,  2.83721400e+02, -1.53860873e+02,
         2.47688082e+02, -1.12450399e+02,  2.91433304e+02,
        -6.45013547e+00,  1.51123920e+01, -3.77966007e+01,
         7.94803415e+01, -1.22383544e+02,  1.15604867e+02,
         2.69228536e+01],
       [ 1.23989791e+02, -5.35409259e+01, -4.97248350e+01,
        -2.46416008e+02,  1.06193652e+02,  1.41559879e+02,
        -1.41103628e+02, -1.90867507e+02, -7.55735388e+00,
        -4.02085806e+01,  1.51586640e+02,  1.91601951e+02,
        -2.72979586e+01,  2.03149852e+01, -2.34655733e+02,
        -1.79300942e+01],
       [ 9.10708125e+01, -4.52950444e+01, -7.65856069e+01,
        -8.36317173e+01,  9.85363452e+01, -3.78257039e+01,
        -1.74908910e+02,  1.27363218e+02, -1.57067434e+02,
        -2.45186522e+01,  2.41200406e+02,  8.00051771e+01,
         1.00870254e+02, -9.68149243e+01, -4.59010759e+00,
        -3.80209375e+02],
       [-2.36662942e+02,  1.23004331e+01, -2.48887178e+02,
        -2.51118925e+02,  1.78383692e+01, -2.92818431e+00,
        -1.94834272e+02, -4.00438733e+02,  7.68017795e+01,
        -1.63576546e+02, -1.83060224e+02, -1.11343514e+02,
        -2.74999471e+02, -8.99994776e+01, -2.14511261e+01,
         1.91976779e+02],
       [-1.72465043e+02, -7.10057101e+01,  2.22294698e+02,
         1.64514391e+02, -3.27547079e+02, -1.37426826e+02,
         1.00713410e+02, -1.71071580e+02, -1.19641273e+02,
        -7.41184365e+01, -7.86279626e+01,  2.00495036e+02,
        -2.67487095e+02,  1.55876648e+02, -1.96742114e+01,
         1.49298726e+02]]), 'b3': np.array([[-253.60215083],
       [ -27.80612453],
       [-102.53134239],
       [  85.68765377],
       [ -54.71924375],
       [-121.00154633],
       [ 161.84139373],
       [ 153.1454647 ],
       [ 204.65965867],
       [ -16.73310886],
       [ 217.88553453],
       [ -19.75495074],
       [ -65.34081934],
       [  80.68743654],
       [ 152.32919825],
       [ -71.15042672]]), 'W4': np.array([[-9.76688514e+01, -1.89458730e+02,  1.65558684e+02,
        -2.22409977e+02,  8.77472388e+01, -1.07907862e+02,
         3.42642383e+01,  2.09242577e+02,  3.59487530e+01,
        -5.85231148e+01, -1.77355143e+02,  3.01568978e+02,
        -3.71113194e+01,  1.86018029e+02, -4.39571458e+02,
         3.60796962e+00],
       [-1.07455794e+02,  3.44783152e+02, -1.32604120e+02,
         1.35185295e+02,  2.87763847e+02, -1.45588090e+02,
         1.18225619e+02, -1.25010165e+02,  3.35961744e+01,
        -1.07297546e+01, -1.77937826e+02, -2.13594437e+02,
         2.22267798e+02, -3.44752904e+01,  8.75885167e+01,
         4.15949568e+02],
       [ 3.45554059e+01,  1.18703697e+02,  1.84003994e+02,
         1.62109633e+02,  8.07833622e+01,  3.18957267e+02,
        -1.68760673e+02, -4.65448257e+02,  1.39316090e+02,
        -1.07246181e+02,  1.24048884e+02,  4.65761468e+01,
         1.20782557e+02,  2.02795037e+02, -1.84241691e+02,
         9.74352095e+01],
       [ 1.74929374e+02, -9.99910104e+01, -1.42402105e+02,
         7.68154789e+01,  8.34991604e+01, -2.03184786e+02,
        -6.21697722e+01,  2.11659745e+02,  8.56437647e+01,
        -1.38022568e+02, -1.54182737e+02, -1.08388142e+02,
        -6.80444686e+01, -3.63974817e+02,  1.33856839e+02,
         1.78149773e+02],
       [ 1.11090492e+02,  6.02526428e+01, -2.10174362e+02,
         1.01234691e+02,  1.14356371e+02, -1.84418008e+02,
        -2.41146902e+02, -5.57674637e+01,  2.57352297e+01,
         1.36054396e+02, -3.80883562e+01, -8.41255118e+00,
        -1.31655084e+02, -9.22860371e+01,  8.97471352e+01,
         2.03653434e+02],
       [-1.25774915e+02,  1.27955869e+02,  6.67337005e+01,
         4.15177366e+02, -8.98318774e+01,  2.51952744e+02,
        -4.09430118e+01,  3.81496225e+01, -1.84999896e+02,
         1.37442071e+02, -2.07774158e+02, -9.11086310e+01,
        -7.92644141e+01,  7.86071127e+01, -1.07123759e+01,
         3.30687617e+01],
       [-2.34587681e+02,  5.70851208e+01,  4.23640076e+01,
        -9.66144005e+01, -2.93252899e+02, -2.02512539e+02,
         3.61739102e+02,  3.32405766e+02, -5.61299652e+01,
         2.52161316e+02,  2.17418395e+02, -2.85932760e+02,
         9.64485601e+01, -3.18320749e+02, -8.28524243e+01,
        -3.39768026e+02],
       [-2.33531974e+02,  3.34202678e+02, -2.67729587e+01,
         6.03228819e+01, -2.67013017e+01,  7.83287574e+00,
        -1.99319253e+01, -6.74205676e+01, -2.02978022e+01,
         7.46223821e+01,  2.17525659e+02, -6.14484811e+01,
        -1.50664266e+02,  3.39738090e+02,  1.40024789e+02,
        -3.98348142e+01],
       [ 1.53813836e+02,  6.67957102e+01, -1.22965074e+02,
         1.19899201e+02, -8.29939872e+01,  2.80112114e+01,
        -1.03438121e+02,  1.11126642e+02, -3.39284882e+02,
        -2.13105118e+02, -7.66946109e+01, -2.19544813e+02,
        -2.09585342e+02,  7.46994985e+01,  1.23461497e+02,
        -2.81981940e+01],
       [-6.03415241e+01,  2.32150349e+02,  1.97364939e+02,
         7.08584018e+01, -2.22612208e+01,  6.13082858e+01,
        -5.25110525e+01,  2.67931777e+01, -1.04617974e+02,
        -1.98975853e+02, -1.41419339e+02, -1.36695983e+02,
        -1.36737789e+02,  7.31839106e+01,  2.28175947e+01,
        -6.34721419e+01],
       [ 1.30055856e+02,  1.73601635e+01, -3.50219503e-01,
        -7.53440341e+01,  7.93538539e+01, -1.71289549e+01,
         1.04681209e+02, -5.36198563e+01,  2.84125998e+01,
         8.72210516e+01, -2.93463869e+02, -1.09966711e+02,
         1.11007460e+02,  4.45161753e+02,  1.46329213e+02,
        -1.80337327e+02],
       [ 3.76886188e+01,  1.17936371e+02,  3.26524131e+02,
         1.38131692e+02, -1.25279618e+02,  4.54101180e+01,
        -3.34664687e+02, -1.12146557e+02, -2.20605310e+02,
         2.71781705e+02, -9.87428773e+01,  1.04005226e+02,
         1.40847934e+02,  2.38180292e+02, -6.51101971e+01,
         5.00189825e+01],
       [-2.43101712e+02, -4.69589970e+01,  9.83985328e+00,
         1.54533767e+02, -1.26365498e+02,  3.51985999e+02,
        -5.57601818e+01,  7.76827347e+01,  1.06474931e+02,
         7.95877488e+01, -2.88710562e+02,  5.18349551e+01,
        -1.19529747e+02,  1.03155424e+02,  2.42491310e+02,
        -8.76604803e+01],
       [-1.00739823e+02,  7.23475849e+01, -1.17764475e+02,
         8.77363599e+01, -2.66966308e+01, -4.84763710e+01,
         8.10444064e+01, -2.10859711e+02, -1.12929850e+02,
         1.99254460e+01,  3.67876947e+02, -1.00050334e+01,
         3.08193713e+02,  2.56473225e+02, -1.03405576e+02,
         1.30024730e+02],
       [-3.54337301e+01,  1.08580984e+02,  1.03110323e+02,
        -1.84829969e+02,  3.24812627e+01, -1.81330781e+02,
        -2.27288270e+02,  1.96591355e+02, -1.02151922e+02,
         2.72306827e+01,  2.25934872e+01, -8.59141147e+01,
         7.08553456e+01, -3.74758617e+01,  5.10261492e+01,
         2.34216350e+02],
       [-2.42969612e+02,  2.80793151e+02,  2.93426677e+02,
        -5.20067770e+01,  1.21013508e+02, -1.20966138e+02,
        -1.33846802e+01, -1.68710478e+02, -1.92717883e+01,
        -1.68509691e+02,  2.43635174e+01, -2.99517795e+02,
        -8.14558901e+01, -2.99865308e+02,  1.08960359e+02,
         4.52320003e+02]]), 'b4': np.array([[-145.01131031],
       [ 227.10061017],
       [  78.14132407],
       [-114.01804636],
       [-185.85433126],
       [ -16.50502586],
       [-260.19125568],
       [-137.25736625],
       [  90.33047562],
       [ -21.75952122],
       [ -90.14935141],
       [  38.82015457],
       [   8.64564608],
       [ 216.81927955],
       [-120.05589866],
       [ 180.6251449 ]]), 'W5': np.array([[-328.23291215,   37.06928123,  151.61671494,  164.38012202,
         104.49681334,  123.90124834,  307.00206738,   -3.49771004,
         -48.22005575, -193.64258249,   -8.30222087,   11.47977768,
         126.09310902,  172.31015503,  -95.23903083,  -54.86003561],
       [-129.36075556,  -22.00467605,   -1.6208546 ,  221.12357187,
         -15.40490392,  137.32386659, -170.09049397,   34.14435394,
         -82.97779693,  216.45569018, -141.85061619,   75.70107599,
         389.43278567,  -45.33339739,   85.79086059,   66.6867447 ],
       [-141.61015987,  -59.59850326, -167.7856736 , -302.57779975,
         173.73689051, -166.64518073,    1.444848  ,   80.19391848,
        -125.76682302,  126.10692813,  -60.50724913,  145.05411386,
         -56.65769679,  -89.61285849,  261.53392938,    2.24016041],
       [ 423.20770968,   13.42444309,   22.42715748,  172.2452404 ,
         143.70324716,  260.91988808,  -54.29465015,  103.04866186,
         122.75154934,  -55.61303444,  174.90912292,  112.57838118,
        -189.65090805,    4.68056751,   -4.40091869,  324.86189443],
       [-129.43020469,  139.55133853,   47.87326235,  -73.18087646,
        -142.59556784,  186.96573738,   69.70040987,   -0.50970919,
          23.38540732,  -89.58453601,  130.81956844,   51.27982316,
        -103.96492275, -132.21060711,  179.58175941,  265.90301684],
       [ 110.0988633 , -193.21412096,  -72.22225762,   41.36279725,
          -4.7218229 , -164.81911814, -368.73915993,   47.1916838 ,
         -22.48169636,  -31.64209019,  -56.1613625 ,   -5.01147324,
         137.20980456,   61.5039756 ,   60.84718437,   -6.9353853 ],
       [-128.39494493,  248.61431736,   90.54213029,   26.55827935,
          67.97379115,  219.00034   ,   20.47763907,  108.82003461,
         230.69382763,   47.93686851,   71.36216123,  277.83112111,
         -15.34577754, -172.46976861,   77.9858993 , -220.45758425],
       [  45.46260319,   63.32155544,   34.40395793,   44.96733794,
          40.30467183,  -11.77392779,  158.75943156, -187.70749967,
         -32.05674818, -161.97986094, -156.73541138, -102.13078115,
         216.5267207 , -157.60032188, -140.76181598,  -31.23334325],
       [  43.50633154,   86.53559644,  174.14471839, -241.17781238,
        -346.94990214,  187.78508016,   30.96296867,   66.21817261,
           7.06624039,  -47.73972362,  -97.38637253, -201.28858889,
          69.53363481,  215.10158095,  155.05315946,  160.46616408],
       [  55.23194912, -359.28785581,  -54.94038239,  -65.15175177,
         149.56897356,  -95.12104165,  -20.6869049 , -168.63729697,
         -23.52314119,  145.66727816,  262.66882279,  -19.94661505,
         287.16338688,   -2.51517117,  -34.24411484, -166.50033437],
       [-276.30482273, -135.22158766,   72.69992787,  238.92396741,
         286.12692194,   53.919198  ,  -95.7342489 , -193.13388735,
          17.28234419,  -59.37755848,   12.49736647,  216.62814696,
        -215.30603809,  -82.83797028,  -95.11762634, -347.92160869],
       [ 185.51218952,  172.00943319, -144.64590429,   34.85822459,
         246.58141983, -262.53858063,  344.12236868,  -40.41625657,
        -297.84272381,  130.206468  , -432.19820595, -219.46001631,
         -37.02388225,    5.45835891,   -1.0955873 ,  -60.81194392],
       [  65.09816561,  -87.11264172,  143.97544009,  -63.82186679,
        -252.84925922, -197.79098394, -120.86427142,   49.6969434 ,
        -169.42742755,  -30.80185145,   96.30548771,  -20.88595094,
         -70.41138299, -165.67403233,  -49.76085626, -179.66527117],
       [  64.35860554,   30.69275585,   47.93925548,   92.84207117,
         109.07712155,  162.01847203,  206.7286741 ,  224.35770393,
         -91.29927921,  138.00850493,  182.84026705, -263.56040481,
         -75.55522024, -103.23454686, -107.40907055, -108.42603172],
       [-228.74783858,   43.87904823,  -84.7047302 , -259.5411358 ,
         -30.61544225,  287.51648778, -188.9959668 ,   87.39987924,
         449.82469154,  251.49952655,  115.26393607,  332.67317981,
        -417.17976916,   63.17782682,   62.72421268, -115.59869871],
       [-127.49143105,   45.92023097,  240.39241642,  -35.60482607,
          15.14308843,    6.08596537,  247.41418054,   11.26898533,
         179.42863294,  148.46102747,  118.04827867, -195.65978017,
         -10.35461312,  105.38491575,  -33.08860907, -151.86308865]]), 'b5': np.array([[ 147.45802417],
       [-165.4629917 ],
       [ 247.01236399],
       [-357.02400609],
       [ 161.76535512],
       [ 231.53004571],
       [ 285.7165119 ],
       [ 124.33831433],
       [ -26.5957529 ],
       [-311.39907397],
       [ 235.32552201],
       [  69.34690718],
       [ 164.04394142],
       [  44.26467335],
       [-192.66113414],
       [ 210.68507475]]), 'W6': np.array([[  26.24313131,  -79.9247831 ,   14.10400898,  265.57470379,
         132.34981505,  270.38922413,  125.18564141, -206.78064595,
          49.53575835,  185.88106873,  -89.4341107 , -202.65347363,
         260.50232875,  -48.09235985, -185.39457711, -138.70911522],
       [ -24.32308544,  225.50290276, -123.46544434,  -57.24268297,
         -97.40455235,  294.02008283, -148.68414298,  149.0242332 ,
         -35.93747315, -196.99006194, -110.73771238,  -47.91755152,
        -190.35115307,  112.88284024, -109.58253805,  -56.79612807],
       [  52.07505091,  -24.28780665,   14.6522335 ,  136.09975919,
          68.49643457,   14.84158695,  -60.25714565, -147.74863194,
        -295.46668545,  195.12522386,  197.33754593, -351.87775283,
         281.80792605,   18.73618674, -267.68228715,  127.20338736],
       [  31.50723462,  110.88916593,   67.26672069, -152.60693526,
         -58.70080661,  249.57249283, -108.97681971,  305.5695878 ,
         -61.39364552,  -60.31408002,   -9.40239275, -175.02381834,
         -47.8739896 ,  218.28990299, -205.9905323 ,   56.80660951],
       [ 168.79529205,  208.3434384 ,   39.71823904,   -8.9732516 ,
         246.79145012,   77.470588  ,  -21.09830586, -247.52242022,
         -52.0354336 ,  -32.21933167, -356.65496154,    6.39628193,
         116.56850123,  -57.13153681, -222.20074591, -149.53960929],
       [ 323.62498107, -418.57089827, -293.87336562, -241.27068144,
         -42.26766601, -154.41642869,  142.7681618 ,   96.95247266,
          89.22485558, -281.91404638,  182.04449324,   68.92806211,
          94.54134861, -214.70008822,  -72.36244215,  106.94217377],
       [-285.27111284,  -29.74142161,  -96.32346382,  161.45381544,
          11.77922186,  -12.39333453, -137.08449082,    6.16014946,
          73.33907606,  -92.74597924,   63.24086385, -204.39388092,
        -178.64897483,   33.96813345,  -18.79128255,  -51.31361391],
       [ -19.55417195,  126.97773169, -317.07190441,   26.69525586,
         354.68169798,  -61.00995744, -127.26508295,   -3.31101033,
         115.52110956,  115.2691452 ,   61.07576243, -216.23630793,
        -187.07597007,  -55.44072881, -116.65009652,  111.25271082],
       [-204.01904446,   64.47747341,  198.40079885, -251.77860045,
         137.57848344, -104.75908867, -122.11589383,   52.35768522,
         -39.2277792 ,  142.14546409,  -21.56711165,  -28.33108026,
         335.35461119,  319.76265107, -200.58451302,  -48.43930694]]), 'b6': np.array([[ 365.74758222],
       [  20.18635293],
       [ 174.29049294],
       [  23.13376074],
       [ 231.49942613],
       [ -81.09008234],
       [-142.4448459 ],
       [-279.39870355],
       [ 279.0301133 ]])}

"""calcul(nombre_joueur=10, nombre_itération=100000, learning_rate=1000)"""

play(param)